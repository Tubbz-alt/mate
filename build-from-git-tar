#!/usr/bin/python
import os, sys

def call (command):
	os.system("%s > /dev/null" % command)

if len(sys.argv) != 3:
	print "Usage: build-from-git project-name version"
	sys.exit(1)

project = sys.argv[1]
version = sys.argv[2]

print "============ ASSEMBLE PACKAGE ==============="
packaging = "debian-packages/%s" % project
if os.path.exists ("packages/%s" % project):
	packaging = "packages/%s" % project

release = "git-tar/%s_%s.orig.tar.xz" % (project, version)
build_project = "build/"
if not os.path.exists (release):
	print "ERROR: %s not found!" % release
	sys.exit(1)

call("mkdir -p build")
call("rm -rf build/%s*" % project)
call("tar xvfJ %s -C build/" % release) # Uncompress the release
call("mv build/%s* build/%s" % (project, project))
call("cp %s build/" % release) # Add the orig
call("cp -R %s/* build/%s/" % (packaging, project)) # Add the debian dir
call("cp -R %s/.pc build/%s/" % (packaging, project)) # Add the .pc dir
os.system("ls -al build/%s*" % project)
print ""